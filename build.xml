<?xml version="1.0"?>

<project xmlns:ivy="antlib:org.apache.ivy.ant" name="rentalapp" basedir="." default="usage" >

    <property name="src.dir" value="src"/>
    <property name="web.dir" value="war"/>
    <property name="build.dir" value="${web.dir}/WEB-INF/classes"/>
    <property name="name" value="rentalapp"/>
    <property name="lib.dir" value="lib"/>

    <property name="test.dir" value="test"/>

    <property name="ivy.install.version" value="2.2.0" />
    <property name="ivy.jar.dir" value="${basedir}/ivy" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

    <property name="tomcat.home" value="${basedir}/tomcat"/>
    <property name="tomcatconfig.dir" value="${basedir}/tomcat/config"/>
    <property name="tomcatlog.dir" value="${basedir}/tomcat/log"/>
    <!--<property name="deploy.path" value="${tomcat.home}/apache-tomcat-7.0.33/apache-tomcat-7.0.33/webapps"/>-->


    <!-- =================================
    target: install-ivy
      this target is not necessary if you put ivy.jar in your ant lib directory
      if you already have ivy 1.4 in your ant lib, you can simply remove this
      target and the dependency the 'go' target has on it
   ================================= -->
    <target name="install-ivy" description="--> installs ivy">
        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <echo message="installing ivy..."/>
        <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
             dest="${ivy.jar.file}" usetimestamp="true"/>

        <!-- try to load ivy here from local ivy dir, in case the user has not already dropped it into ant's lib dir
        (note that the latter copy will always take precedence). We will not fail as long as local lib dir exists
        (it may be empty) and ivy is in at least one of ant's lib dir or the local lib dir. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <!--loads ivy tasks and resources into namespace-->
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>


    <target name="retrieve" depends="install-ivy" description="--> installs dependencies">
        <mkdir dir="${lib.dir}"/>
        <ivy:retrieve pattern="${lib.dir}/[artifact]-[type]-[revision].[ext]" />
    </target>

    <target name="install-tomcat" depends="install-ivy" description="--> installs tomcat">
        <ivy:cachepath pathid="cargo.jars" organisation="org.codehaus.cargo" module="cargo-core-uberjar" revision="1.+" inline="true"/>
        <ivy:cachepath pathid="cargo.jars" organisation="org.codehaus.cargo" module="cargo-ant" revision="1.+" inline="true"/>

        <taskdef resource="cargo.tasks" classpathref="cargo.jars"/>

        <delete dir="${tomcatconfig.dir}" />
        <mkdir dir="${tomcatlog.dir}"/>
        <mkdir dir="${tomcatconfig.dir}"/>
        <echo message="Starting Cargo..."/>
        <echo message="Using tomcat.home = ${tomcat.home} "/>
        <echo message="Using war = ${name} "/>

        <cargo containerId="tomcat7x" output="${tomcatlog.dir}/output.log" log="${tomcatlog.dir}/cargo.log" action="start">

            <zipUrlInstaller installUrl="http://www.eng.lsu.edu/mirrors/apache/tomcat/tomcat-7/v7.0.33/bin/apache-tomcat-7.0.33.zip"
            downloadDir="target/downloads"
            extractDir="${tomcat.home}"/>
            <!--extractDir="target/extracts"/>-->

            <configuration home="${tomcatconfig.dir}">
                <property name="cargo.servlet.port" value="8080"/>
                <property name="cargo.logging" value="high"/>
            </configuration>
        </cargo>

    </target>


    <!-- Define where the libraries (.jars) are -->
    <path id="master-classpath">
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>

        <pathelement path="${build.dir}"/>
    </path>

    <target name="usage">
        <echo message=""/>
        <echo message="${name} build file"/>
        <echo message="-----------------------------------"/>
        <echo message=""/>
        <echo message="Available targets are:"/>
        <echo message=""/>
        <echo message="build     --> Build the application"/>
        <echo message="buildtests--> Compile test tree java files"/>
        <echo message="tests     --> Run tests"/>
        <echo message="deploy    --> Deploy application as directory"/>
        <echo message="deploywar --> Deploy application as a WAR file"/>
        <echo message="install   --> Install application in Tomcat"/>
        <echo message="reload    --> Reload application in Tomcat"/>
        <echo message="start     --> Start Tomcat application"/>
        <echo message="stop      --> Stop Tomcat application"/>
        <echo message="list      --> List Tomcat applications"/>
        <echo message=""/>
    </target>

    <target name="clean" description="Cleans the out folders before building">
        <delete dir="${build.dir}"/>
    </target>

    <target name="build" depends="clean, retrieve" description="Compile main source tree java files">
        <mkdir dir="${build.dir}"/>
        <javac destdir="${build.dir}" source="1.5" target="1.5" debug="true"
        deprecation="false" optimize="false" failonerror="true">
            <src path="${src.dir}"/>
            <classpath refid="master-classpath"/>
        </javac>
    </target>

    <target name="buildtests" depends="retrieve" description="Compile test tree java files">
        <mkdir dir="${build.dir}"/>
        <javac destdir="${build.dir}" source="1.5" target="1.5" debug="true"
               deprecation="false" optimize="false" failonerror="true">
            <src path="${test.dir}"/>
            <classpath refid="master-classpath"/>
        </javac>
    </target>

    <target name="tests" depends="build, buildtests" description="Run tests">
        <junit printsummary="on"
               fork="false"
               haltonfailure="false"
               failureproperty="tests.failed"
               showoutput="true">
            <classpath refid="master-classpath"/>
            <formatter type="brief" usefile="false"/>

            <!--runs all the tests-->
            <batchtest>
                <fileset dir="${build.dir}">
                    <include name="**/*Test.*"/>
                </fileset>
            </batchtest>

        </junit>

        <fail if="tests.failed">
            tests.failed=${tests.failed}
            ***********************************************************
            ***********************************************************
            ****  One or more tests failed!  Check the output ...  ****
            ***********************************************************
            ***********************************************************
        </fail>
    </target>

    <target name="deploy" depends="build" description="Deploy application">
        <copy todir="${deploy.path}/${name}" preservelastmodified="true">
            <fileset dir="${web.dir}">
                <include name="**/*.*"/>
            </fileset>
        </copy>
    </target>

     <target name="deploywar" depends="build" description="Deploy application as a WAR file">
        <war destfile="${name}.war"
             webxml="${web.dir}/WEB-INF/web.xml">
            <fileset dir="${web.dir}">
                <include name="**/*.*"/>
            </fileset>
        </war>
        <copy todir="${deploy.path}" preservelastmodified="true">
            <fileset dir=".">
                <include name="*.war"/>
            </fileset>
        </copy>
    </target>

    <!--still not working-->
    <target name="start" depends="install-tomcat" description="Starts tomcat application">
        <cargo containerId="tomcat7x" home="${tomcat.home}/apache-tomcat-7.0.33/apache-tomcat-7.0.33" output="${tomcatlog.dir}/output.log"
               log="${tomcatlog.dir}/cargo.log" action="run">

            <configuration home="${tomcatconfig.dir}" type="standalone">
                <property name="cargo.servlet.port" value="8080"/>
                <property name="cargo.logging" value="high"/>
                <property name="cargo.servlet.users" value="admin::manager|tomcat:tomcat"/>
            </configuration>
        </cargo>
    </target>

</project>